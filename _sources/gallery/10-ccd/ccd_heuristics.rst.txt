
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/10-ccd/ccd_heuristics.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_10-ccd_ccd_heuristics.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_10-ccd_ccd_heuristics.py:


CCD Heuristics
==============

Examples to develop a better intuition for CCD counts from known sources

.. GENERATED FROM PYTHON SOURCE LINES 7-22

.. code-block:: default

    import numpy as np

    import mirage as mr

    z_obs = np.pi / 4  # Point the telescope towards zenith
    station = mr.Station(preset="pogs")
    projected_irrad_per_pixel_area = mr.dms_to_rad(
        0, 0, station.telescope.pixel_scale
    ) ** 2 * mr.mpsas_to_irradiance_per_steradian(22)
    sint_val = mr.sint(station, z_obs)[0]
    count_per_second_per_pixel = sint_val * projected_irrad_per_pixel_area
    print(
        f"For a telescope pointed towards zenith of 22 MPSAS sky, each pixel counts on average {count_per_second_per_pixel:.2f} per second"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    For a telescope pointed towards zenith of 22 MPSAS sky, each pixel counts on average 1.17 per second




.. GENERATED FROM PYTHON SOURCE LINES 23-24

We can also look at counts due to point sources. Note that these sources are actually spread across a few pixels, so the values are actually much lower on the CCD

.. GENERATED FROM PYTHON SOURCE LINES 24-43

.. code-block:: default

    total_star_counts = sint_val * mr.apparent_magnitude_to_irradiance(16)
    print(
        f"A magnitude 16 star produces on average {total_star_counts:.2e} counts per second"
    )

    total_star_counts = sint_val * mr.apparent_magnitude_to_irradiance(8)
    print(
        f"A magnitude 8 star produces on average {total_star_counts:.2e} counts per second"
    )

    irrad_sphere = (
        mr.normalized_light_curve_sphere(
            cd_sphere=1.0, r_sphere_m=10, phase_angle_rad=np.pi / 2
        )
        / (40e6) ** 2
    )
    print(
        f"A 10-meter diffuse sphere in GEO produces on average {irrad_sphere*sint_val:.2e} counts per second"
    )




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    A magnitude 16 star produces on average 5.59e+02 counts per second
    A magnitude 8 star produces on average 8.86e+05 counts per second
    A 10-meter diffuse sphere in GEO produces on average 7.39e+02 counts per second





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.008 seconds)


.. _sphx_glr_download_gallery_10-ccd_ccd_heuristics.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: ccd_heuristics.py <ccd_heuristics.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: ccd_heuristics.ipynb <ccd_heuristics.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
