
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/10-ccd/star_matching.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_10-ccd_star_matching.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_10-ccd_star_matching.py:


Star Matching
=============

Given star centroid locations and an initial estimate of the look direction and tracking rate, fit the catalog

.. GENERATED FROM PYTHON SOURCE LINES 7-22

.. code-block:: default


    import os

    import matplotlib.pyplot as plt
    import numpy as np

    import mirage as mr
    import mirage.vis as mrv

    station = mr.Station()
    date = mr.now()
    mr.tic("Loading star catalog")
    catalog = mr.StarCatalog("gaia", station, date, limiting_magnitude=13)
    mr.toc()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Loading star catalog: 1.98e+00 seconds




.. GENERATED FROM PYTHON SOURCE LINES 23-24

Let's figure out the streak direction

.. GENERATED FROM PYTHON SOURCE LINES 24-68

.. code-block:: default


    fits_path = os.path.join(os.environ["SRCDIR"], "..", "00161295.48859.fit")
    fits_info = mr.info_from_fits(fits_path)

    img = fits_info["ccd_adu"]
    img_raw = img.copy()
    img_log10 = np.log10(img)
    img = np.log10(img - mr.image_background_parabola(img))
    img[img < 1] = 0
    img[np.isnan(img) | np.isinf(np.abs(img))] = 0

    up_dir_eci = mr.fits_up_direction(fits_info)

    station.telescope.fwhm = 4
    mr.tic()
    adu_grid_streaked_sampled = station.telescope.ccd.generate_ccd_image(
        fits_info["dates"],
        station,
        fits_info["look_dirs_eci"],
        [1e4],
        catalog,
        scope_up_hat_eci=up_dir_eci,
        hot_pixel_probability=0,
        dead_pixel_probability=0,
        add_parabola=False,
        scintillation=False,
    )
    mr.toc()

    adu_grid_streaked_sampled = np.log10(
        adu_grid_streaked_sampled - mr.image_background_naive(adu_grid_streaked_sampled)[1]
    )
    adu_grid_streaked_sampled[adu_grid_streaked_sampled < 1] = 0
    adu_grid_streaked_sampled[
        np.isnan(adu_grid_streaked_sampled) | np.isinf(np.abs(adu_grid_streaked_sampled))
    ] = 0

    plt.subplot(1, 2, 1)
    plt.imshow(img, cmap="gray")
    mrv.texit("True Image", "", "", grid=False)
    plt.subplot(1, 2, 2)
    plt.imshow(adu_grid_streaked_sampled, cmap="gray")
    mrv.texit("Synthetic Image", "", "", grid=False)
    plt.show()



.. image-sg:: /gallery/10-ccd/images/sphx_glr_star_matching_001.png
   :alt: True Image, Synthetic Image
   :srcset: /gallery/10-ccd/images/sphx_glr_star_matching_001.png, /gallery/10-ccd/images/sphx_glr_star_matching_001_2_00x.png 2.00x
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /Users/liamrobinson/Documents/PyLightCurves/examples/10-ccd/star_matching.py:31: RuntimeWarning: invalid value encountered in log10
      img = np.log10(img - mr.image_background_parabola(img))
    Objects in frame 1:
    NAVSTAR 81 (USA 319)
    Objects in frame 2:
    NAVSTAR 81 (USA 319)
    Elapsed time: 6.23e+00 seconds
    /Users/liamrobinson/Documents/PyLightCurves/examples/10-ccd/star_matching.py:53: RuntimeWarning: invalid value encountered in log10
      adu_grid_streaked_sampled = np.log10(





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  21.708 seconds)


.. _sphx_glr_download_gallery_10-ccd_star_matching.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: star_matching.py <star_matching.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: star_matching.ipynb <star_matching.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
