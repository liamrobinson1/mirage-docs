
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/10-ccd/ccd_scintillation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_10-ccd_ccd_scintillation.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_10-ccd_ccd_scintillation.py:


CCD Scintillation
=================
Generating convolution kernels that take into account atmospheric turbulence

.. GENERATED FROM PYTHON SOURCE LINES 6-15

.. code-block:: default


    import os

    import matplotlib.pyplot as plt
    import numpy as np

    import mirage as mr
    import mirage.vis as mrv








.. GENERATED FROM PYTHON SOURCE LINES 16-17

Plotting the convolution kernel with no atmospheric scintillation

.. GENERATED FROM PYTHON SOURCE LINES 17-38

.. code-block:: default

    direction = [1, 0.4]
    length = 300
    kernel_no_scint = mr.streak_convolution_kernel(direction, length)
    kernel_scint = mr.streak_convolution_kernel(
        direction, length, position_turbulence=0.1, intensity_turbulence=0.1
    )

    plt.figure(figsize=(8, 4))
    plt.subplot(1, 2, 1)
    plt.imshow(kernel_no_scint, cmap="hot")
    mrv.texit("Kernel Without Scintillation", "", "", grid=False)
    plt.colorbar(cax=mrv.get_cbar_ax(), label="ADU")
    plt.clim(0, np.max(kernel_no_scint))
    plt.subplot(1, 2, 2)
    plt.imshow(kernel_scint, cmap="hot")
    mrv.texit("Kernel With Scintillation", "", "", grid=False)
    plt.colorbar(cax=mrv.get_cbar_ax(), label="ADU")
    plt.clim(0, np.max(kernel_scint))
    plt.tight_layout()
    plt.show()




.. image-sg:: /gallery/10-ccd/images/sphx_glr_ccd_scintillation_001.png
   :alt: Kernel Without Scintillation, Kernel With Scintillation
   :srcset: /gallery/10-ccd/images/sphx_glr_ccd_scintillation_001.png, /gallery/10-ccd/images/sphx_glr_ccd_scintillation_001_2_00x.png 2.00x
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 39-40

Let's make sure that the volume of these kernels is one:

.. GENERATED FROM PYTHON SOURCE LINES 40-45

.. code-block:: default


    print(f"Kernel volume without scintillation: {np.sum(kernel_no_scint):.4f}")
    print(f"Kernel volume with scintillation: {np.sum(kernel_scint):.4f}")






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Kernel volume without scintillation: 1.0000
    Kernel volume with scintillation: 1.0000




.. GENERATED FROM PYTHON SOURCE LINES 46-47

Plotting a point after applying the streak filter

.. GENERATED FROM PYTHON SOURCE LINES 47-75

.. code-block:: default

    import itertools

    telescope = mr.Telescope(preset="pogs")
    ccd_adu = np.zeros((600, 600))
    ccd_adu[300:310, 300:310] = 1

    turbs = [0.0, 0.1, 0.3]

    plt.figure(figsize=(5, 5))
    for i, turb in enumerate(itertools.product(turbs, repeat=2)):
        plt.subplot(len(turbs), len(turbs), i + 1)
        ccd_adu_scint = mr.streak_convolution(
            ccd_adu,
            (1.0, 0.0),
            200,
            position_turbulence=turb[0],
            intensity_turbulence=turb[1],
        )

        plt.imshow(ccd_adu_scint, cmap="hot")
        plt.xticks([])
        plt.yticks([])

    plt.suptitle("Streaks with Atmospheric Scintillation")
    plt.gcf().supxlabel("Increasing Intensity Turbulence")
    plt.gcf().supylabel("Increasing Position Turbulence")
    plt.tight_layout()
    plt.show()



.. image-sg:: /gallery/10-ccd/images/sphx_glr_ccd_scintillation_002.png
   :alt: Streaks with Atmospheric Scintillation
   :srcset: /gallery/10-ccd/images/sphx_glr_ccd_scintillation_002.png, /gallery/10-ccd/images/sphx_glr_ccd_scintillation_002_2_00x.png 2.00x
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.853 seconds)


.. _sphx_glr_download_gallery_10-ccd_ccd_scintillation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: ccd_scintillation.py <ccd_scintillation.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: ccd_scintillation.ipynb <ccd_scintillation.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
