
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/00-orbits/ground_track.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_00-orbits_ground_track.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_00-orbits_ground_track.py:


Ground Tracks
=============

Plots the ground track for a GPS satellite

.. GENERATED FROM PYTHON SOURCE LINES 7-15

.. code-block:: default



    import pyspaceaware as ps
    import matplotlib.pyplot as plt
    import numpy as np
    from PIL import Image
    import os








.. GENERATED FROM PYTHON SOURCE LINES 16-17

Let's set up a space of dates to operate on

.. GENERATED FROM PYTHON SOURCE LINES 17-20

.. code-block:: default


    dates = ps.date_linspace(ps.now(), ps.now() + ps.days(10), 8640) - ps.days(100)








.. GENERATED FROM PYTHON SOURCE LINES 21-22

And propagate one of the NAVSTAR satellites to all the dates

.. GENERATED FROM PYTHON SOURCE LINES 22-25

.. code-block:: default

    obj = ps.SpaceObject("cube.obj", identifier="NAVSTAR 81 (USA 319)")
    r_eci = obj.propagate(dates)








.. GENERATED FROM PYTHON SOURCE LINES 26-27

Converting the propagated result into ECEF, then LLA

.. GENERATED FROM PYTHON SOURCE LINES 27-30

.. code-block:: default

    r_ecef = ps.stack_mat_mult_vec(ps.j2000_to_itrf(dates), r_eci)
    lla = ps.itrf_to_lla(r_ecef)








.. GENERATED FROM PYTHON SOURCE LINES 31-32

Finally, plotting the resulting Earth-fixed trajectory with the Earth in the background

.. GENERATED FROM PYTHON SOURCE LINES 32-41

.. code-block:: default

    im = Image.open(
        os.path.join(os.environ["TEXDIR"], "world.topo.bathy.200412.3x5400x2700.jpg")
    )
    plt.imshow(im, extent=(-180, 180, -90, 90))
    plt.scatter(np.rad2deg(lla[1]), np.rad2deg(lla[0]), s=1, c="m")
    plt.title(f"{obj.identifier} Ground Track")
    plt.xlabel("Longitude [deg]")
    plt.ylabel("Latitude [deg]")
    plt.show()



.. image-sg:: /gallery/00-orbits/images/sphx_glr_ground_track_001.png
   :alt: NAVSTAR 81 (USA 319) Ground Track
   :srcset: /gallery/00-orbits/images/sphx_glr_ground_track_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.037 seconds)


.. _sphx_glr_download_gallery_00-orbits_ground_track.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: ground_track.py <ground_track.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: ground_track.ipynb <ground_track.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
