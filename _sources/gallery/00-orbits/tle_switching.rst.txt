
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/00-orbits/tle_switching.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_00-orbits_tle_switching.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_00-orbits_tle_switching.py:


TLE Switching
=============

Various methods to switch between TLEs for more accurate long-term propagation

.. GENERATED FROM PYTHON SOURCE LINES 7-13

.. code-block:: default


    import numpy as np
    import pyvista as pv

    import pyspaceaware as ps








.. GENERATED FROM PYTHON SOURCE LINES 14-15

Let's use the SUPERBIRD 6 satellite

.. GENERATED FROM PYTHON SOURCE LINES 15-18

.. code-block:: default

    satdefs = ps.load_satdef_array()
    satnum = satdefs.get_satnum_by_name("SUPERBIRD 6")








.. GENERATED FROM PYTHON SOURCE LINES 19-20

And propagate for the previous 30 days

.. GENERATED FROM PYTHON SOURCE LINES 20-24

.. code-block:: default

    dtimes, epsec_space = ps.date_linspace(
        ps.now() - ps.days(30), ps.now(), int(1e4), return_epsecs=True
    )








.. GENERATED FROM PYTHON SOURCE LINES 25-29

We can then propagate with three switching strategies:
  - ``closest`` choses the closest TLE epoch to the current time
  - ``newest`` choses the most previous recent TLE at each time
  - ``interp`` choses the most recent and next TLEs and linearly interpolates between their propogated positions

.. GENERATED FROM PYTHON SOURCE LINES 29-39

.. code-block:: default

    r_closest = ps.tle_propagate_with_switching(
        satnum, dtimes, switch_strategy="closest", frame="ecef"
    )
    r_interp = ps.tle_propagate_with_switching(
        satnum, dtimes, switch_strategy="interp", frame="ecef"
    )
    r_newest = ps.tle_propagate_with_switching(
        satnum, dtimes, switch_strategy="newest", frame="ecef"
    )








.. GENERATED FROM PYTHON SOURCE LINES 40-41

We can plot these trajectories to show that they result in similar trajectories

.. GENERATED FROM PYTHON SOURCE LINES 41-54

.. code-block:: default

    pl = pv.Plotter()
    ps.plot_earth(pl, date=dtimes[0], mode="eci", night_lights=True, atmosphere=True)
    lw = 6
    ps.plot3(pl, r_closest, color="c", lighting=False, line_width=lw)
    # ps.plot3(pl, r_newest, color="m", lighting=False, line_width=lw)
    # ps.plot3(pl, r_interp, color="lime", lighting=False, line_width=lw)
    mid_point = r_interp[r_interp.shape[0] // 2, :]
    pl.camera.focal_point = mid_point
    pl.camera.position = (np.linalg.norm(mid_point) + 100_000) * (
        ps.hat(mid_point) + np.array([0.0, 0.0, 0.4])
    )
    pl.show()




.. image-sg:: /gallery/00-orbits/images/sphx_glr_tle_switching_001.png
   :alt: tle switching
   :srcset: /gallery/00-orbits/images/sphx_glr_tle_switching_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 55-56

We can also plot the error between these switching methods. Clearly, the interpolated switching strategy is the most accurate choice

.. GENERATED FROM PYTHON SOURCE LINES 56-66

.. code-block:: default


    import matplotlib.pyplot as plt

    plt.plot(epsec_space / 86400, ps.vecnorm(r_interp - r_closest))
    plt.plot(epsec_space / 86400, ps.vecnorm(r_newest - r_closest))
    plt.xlabel("Elapsed time [days]")
    plt.ylabel("Position error [km]")
    plt.legend(["Interp - Closest", "Newest - Closest"])
    plt.grid()
    plt.show()



.. image-sg:: /gallery/00-orbits/images/sphx_glr_tle_switching_002.png
   :alt: tle switching
   :srcset: /gallery/00-orbits/images/sphx_glr_tle_switching_002.png, /gallery/00-orbits/images/sphx_glr_tle_switching_002_2_00x.png 2.00x
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  9.332 seconds)


.. _sphx_glr_download_gallery_00-orbits_tle_switching.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tle_switching.py <tle_switching.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tle_switching.ipynb <tle_switching.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
