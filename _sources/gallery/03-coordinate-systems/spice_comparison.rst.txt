
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/03-coordinate-systems/spice_comparison.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_03-coordinate-systems_spice_comparison.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_03-coordinate-systems_spice_comparison.py:


SPICE vs Vallado
=================

Computes the difference between the Vallado approximations of the Moon ephemerides and the JPL NAIF SPICE Toolkit results

.. GENERATED FROM PYTHON SOURCE LINES 10-11

Let's set up the dates we want to evaluate at, here choosing the next year

.. GENERATED FROM PYTHON SOURCE LINES 11-16

.. code-block:: default

    import mirage as mr
    import mirage.vis as mrv

    dates = mr.date_linspace(mr.now(), mr.now() + mr.days(365), int(1e3))








.. GENERATED FROM PYTHON SOURCE LINES 17-18

Compute the position of the Moon relative to the Earth using SPICE

.. GENERATED FROM PYTHON SOURCE LINES 18-22

.. code-block:: default

    mr.tic()
    spice_moon_state_eci = mr.moon(dates, "spice")
    mr.toc()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Elapsed time: 7.39e-02 seconds




.. GENERATED FROM PYTHON SOURCE LINES 23-24

And using Vallado's approximation

.. GENERATED FROM PYTHON SOURCE LINES 24-28

.. code-block:: default

    mr.tic()
    ps_moon_state_eci = mr.moon(dates, "vallado")
    mr.toc()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Elapsed time: 2.33e-02 seconds




.. GENERATED FROM PYTHON SOURCE LINES 29-30

And plot the results

.. GENERATED FROM PYTHON SOURCE LINES 30-49

.. code-block:: default

    import pyvista as pv

    pl = pv.Plotter()
    pl.set_background("k")
    mrv.plot3(
        pl,
        spice_moon_state_eci - ps_moon_state_eci,
        scalars=mr.vecnorm(spice_moon_state_eci - ps_moon_state_eci).flatten(),
        cmap="isolum",
        lighting=False,
        line_width=3,
    )
    pl.view_isometric()

    # mr.plot_moon(
    #     pl, date=dates[0], mode="mci"
    # )  # Display the Moon centered in inertial coordinates
    pl.show()




.. image-sg:: /gallery/03-coordinate-systems/images/sphx_glr_spice_comparison_001.png
   :alt: spice comparison
   :srcset: /gallery/03-coordinate-systems/images/sphx_glr_spice_comparison_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 50-52

As we can see, the Vallado approximation is usually a few thousand kilometers off from SPICE, and takes about half the time to evaluate.
Let's get a better intuition for the magnitude of this discrepancy by computing the center of the totality of a lunar eclipse that occured on November 8th, 2022

.. GENERATED FROM PYTHON SOURCE LINES 52-60

.. code-block:: default


    import matplotlib.pyplot as plt

    date = mr.utc(2022, 11, 8)
    dates, epsecs = mr.date_arange(
        date, date + mr.days(1), mr.seconds(10), return_epsecs=True
    )








.. GENERATED FROM PYTHON SOURCE LINES 61-62

Computing the Moon position with each method:

.. GENERATED FROM PYTHON SOURCE LINES 62-68

.. code-block:: default

    moon_pos_spice = mr.moon(dates)
    irrad_frac_spice = mr.sun_irradiance_fraction(dates, moon_pos_spice)

    moon_pos_vallado = mr.moon(dates, method="vallado")
    irrad_frac_vallado = mr.sun_irradiance_fraction(dates, moon_pos_vallado)








.. GENERATED FROM PYTHON SOURCE LINES 69-70

And plotting the eclipses:

.. GENERATED FROM PYTHON SOURCE LINES 70-84

.. code-block:: default

    plt.plot(epsecs / 3600, irrad_frac_spice)
    plt.plot(epsecs / 3600, irrad_frac_vallado)
    old_ylim = plt.ylim()
    plt.vlines(10 + 59.5 / 60, *old_ylim, colors="lime")
    plt.ylim(*old_ylim)
    plt.xlim(0, 24)
    plt.legend(["SPICE", "Vallado approx.", "True totality center"])
    plt.xlabel("Hours (UTC)")
    plt.ylabel("Fraction of Sun visible from Moon center")
    plt.title("Nov 08, 2022 Lunar Eclipse")
    plt.grid()

    plt.show()




.. image-sg:: /gallery/03-coordinate-systems/images/sphx_glr_spice_comparison_002.png
   :alt: Nov 08, 2022 Lunar Eclipse
   :srcset: /gallery/03-coordinate-systems/images/sphx_glr_spice_comparison_002.png, /gallery/03-coordinate-systems/images/sphx_glr_spice_comparison_002_2_00x.png 2.00x
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 85-88

We can refer to `a NASA article <https://moon.nasa.gov/news/185/what-you-need-to-know-about-the-lunar-eclipse/#:~:text=The%20last%20total%20lunar%20eclipse,Moon%20passes%20into%20Earth%27s%20shadow.>`_ for more info about this eclipse, which proves that the SPICE solution is almost exactly on top of the true center, but the Vallado approximation is only a few minutes different

.. note:: Ironically, the "true" totality time reported by NASA was probably just computed with SPICE in the first place


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.502 seconds)


.. _sphx_glr_download_gallery_03-coordinate-systems_spice_comparison.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: spice_comparison.py <spice_comparison.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: spice_comparison.ipynb <spice_comparison.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
