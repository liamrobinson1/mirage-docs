
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/01-light_curve_inversion/convex_inversion_with_uncertainty.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_01-light_curve_inversion_convex_inversion_with_uncertainty.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_01-light_curve_inversion_convex_inversion_with_uncertainty.py:


Light Curve Inversion with Uncertainty
======================================
Inverting convex shapes from light curves with uncertainty

.. GENERATED FROM PYTHON SOURCE LINES 6-187

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np
    import pyvista as pv

    import mirage as mr
    import mirage.vis as mrv

    itensor = np.diag([1.0, 2.0, 3.0])
    w0 = 1e-1 * mr.hat(np.array([[0, 2, 0.1]]))
    q0 = np.array([[0.0, 0.0, 0.0, 1.0]])
    idate = mr.utc(2023, 1, 1, 5)
    obs_time = mr.hours(3)
    obs_dt = mr.seconds(10)
    pl_shape = (4, 4)
    nights = np.prod(pl_shape)

    obj_file = "cube.obj"

    station = mr.Station(preset="pogs")
    brdf = mr.Brdf(name="phong", cd=0.5, cs=0.0, n=10)
    brdf_inversion = brdf
    # brdf_inversion = mr.Brdf(name='phong', cd=1, cs=0.0, n=5)
    attitude = mr.RbtfAttitude(w0=w0, q0=q0, itensor=itensor)

    dates = []
    epsecs = []
    for i in range(nights):
        d = mr.date_arange(idate, idate + obs_time, obs_dt)
        dates.append(d)
        idate += mr.days(1)
    dates = np.concatenate(dates)
    epsecs = np.array([(d - dates[0]).total_seconds() for d in dates])

    q_of_t, w_of_t = attitude.propagate(epsecs)
    dcms_of_t = mr.quat_to_dcm(q_of_t)
    model_scale_factor = 1

    obj = mr.SpaceObject(obj_file, identifier="goes 15")
    obj.shift_to_center_of_mass()

    # mrv.vis_attitude_motion(obj, q_of_t)
    # endd

    lc_ccd_signal_sampler, aux_data = station.observe_light_curve(
        obj, attitude, brdf, dates, use_engine=False, model_scale_factor=model_scale_factor
    )

    sun_body = aux_data["sun_vector_object_body"]
    obs_body = aux_data["observer_vector_object_body"]

    sint = aux_data["sint"]
    lc_hat = aux_data["lc_clean_norm"]
    constr = aux_data["all_constraints_satisfied"]
    br_mean = aux_data["background_mean"]
    airy_disk_pixels = aux_data["airy_disk_pixels"]
    obs_to_moon = aux_data["obs_to_moon"]
    lc_clean = aux_data["lc_clean"]
    snr = aux_data["snr"]

    # plt.figure(figsize=(7, 5))
    lcs_noisy_adu = np.array([lc_ccd_signal_sampler() for _ in range(1000)])
    lcs_noisy_irrad = lcs_noisy_adu / (
        aux_data["sint"] * station.telescope.integration_time
    )
    lcs_noisy_unit_irrad = (
        lcs_noisy_irrad
        * (aux_data["rmag_station_to_sat"] * 1e3) ** 2
        / mr.AstroConstants.sun_irradiance_vacuum
    )

    # lcs_noisy_mag = mr.irradiance_to_apparent_magnitude(lcs_noisy_irrad)
    # var_lcs = np.var(lcs_noisy_mag, axis=0)
    # mean_lcs = np.mean(lcs_noisy_mag, axis=0)

    # plt.plot(epsecs, mean_lcs, c="k")
    # for stdev in [1, 2, 3]:
    #     plt.fill_between(
    #         epsecs,
    #         mean_lcs - (stdev - 1) * np.sqrt(var_lcs),
    #         mean_lcs - stdev * np.sqrt(var_lcs),
    #         alpha=0.4 - 0.1 * stdev,
    #         color="b",
    #         edgecolor=None,
    #     )
    #     plt.fill_between(
    #         epsecs,
    #         mean_lcs + (stdev - 1) * np.sqrt(var_lcs),
    #         mean_lcs + stdev * np.sqrt(var_lcs),
    #         alpha=0.4 - 0.1 * stdev,
    #         color="b",
    #         edgecolor=None,
    #     )
    # mrv.texit(
    #     "Light Curve with Uncertainty",
    #     "Epoch seconds",
    #     "Apparent Magnitude",
    #     grid=False,
    #     legend=["Mean", "1$\sigma$", "2$\sigma$", "3$\sigma$"],
    # )
    # plt.show()

    pl = pv.Plotter(shape=pl_shape)
    rec_objs = []
    lc_sampled = lcs_noisy_adu[0, :]
    lc = lcs_noisy_unit_irrad[0, :]
    for i in range(nights):
        inds = (np.array([i, i + 1]) / nights * lc.size).astype(int)

        lc_this = lc[inds[0] : inds[1]]
        sun_body_this = sun_body[inds[0] : inds[1], :]
        obs_body_this = obs_body[inds[0] : inds[1], :]

        egi_opt_initial, egi_opt = mr.optimize_egi(
            # lc_this / np.max(lc_this),
            lc_this,
            sun_body_this,
            obs_body_this,
            brdf_inversion,
            merge_iter=2,
            merge_angle=np.pi / 8,
            return_all=True,
        )

        # Inversion
        rec_obj = mr.construct_mesh_from_egi(mr.close_egi(egi_opt_initial))
        # rec_obj = rec_obj.introduce_concavity(
        #     mr.hat(np.sum(egi_opt_initial, axis=0)),
        #     np.random.uniform(0, 60) if np.random.rand() > 0.5 else 0,
        #     linear_iter=4,
        #     loop_iter=0,
        # )
        rec_obj.shift_to_center_of_mass()
        rec_objs.append(rec_obj)

    err = []
    for i,rec_obj in enumerate(rec_objs):
        # lc_hat = rec_obj.convex_light_curve(brdf, sun_body, obs_body) * model_scale_factor ** 2
        lc_hat = (
            mr.run_light_curve_engine(brdf, rec_obj, sun_body, obs_body)
            # * model_scale_factor**2
        )
        err.append(np.linalg.norm(lc_hat - lc))
        print(f"Error for night {i+1}: {err[-1]:.2e}")
    err = np.array(err)
    weights = (1 - (err - np.min(err)) / (np.max(err) - np.min(err)))

    fu_lambdas = []
    for i, rec_obj in enumerate(rec_objs):
        inds = (np.array([i, i + 1]) / nights * lc.size).astype(int)

        lc_this = lc[inds[0] : inds[1]]
        sun_body_this = sun_body[inds[0] : inds[1], :]
        obs_body_this = obs_body[inds[0] : inds[1], :]
        snr_this = snr[inds[0] : inds[1]]

        print(f"Computing face uncertainty {i+1}/{len(rec_objs)}")

        fu = mr.face_uncertainty(rec_obj, sun_body_this, obs_body_this, brdf, lc_this)
        fu_lambdas.append(mr.SphericalWeight(rec_obj.unique_normals, (1-fu[rec_obj.all_to_unique]) * weights[i]))
        az,el,_ = mr.cart_to_sph(*rec_obj.face_normals.T)
        pl.subplot(i // pl_shape[0], i % pl_shape[1])
        # pv.plotting.opts.InterpolationType(0)
        mrv.render_spaceobject(pl, rec_obj)
        mrv.render_spaceobject(pl, obj, style="wireframe", color="r")
        pl.add_text(
            f"Night {i+1}",
            font="courier",
        )

        # az,el = np.meshgrid(np.linspace(0,2*np.pi,1000), np.linspace(-np.pi/2,np.pi/2,1000))
        # mr.tic()
        # vals = fu_lambdas[-1](az.flatten(), el.flatten()).reshape(az.shape)
        # plt.imshow(vals, extent=[0,2*np.pi,-np.pi/2,np.pi/2], origin='lower', cmap='cividis', aspect='auto')
        # mrv.texit(f"Face Uncertainty Map", "Azimuth (rad)", "Elevation (rad)", grid=True)
        # plt.colorbar()
        # mr.toc()
        # plt.show()

    pl.show()




.. image-sg:: /gallery/01-light_curve_inversion/images/sphx_glr_convex_inversion_with_uncertainty_001.png
   :alt: convex inversion with uncertainty
   :srcset: /gallery/01-light_curve_inversion/images/sphx_glr_convex_inversion_with_uncertainty_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    WARNING: no observation constraints assigned!
    Error for night 1: 1.46e+00
    Error for night 2: 2.82e+00
    Error for night 3: 2.39e+00
    Error for night 4: 1.20e+01
    Error for night 5: 5.80e+00
    Error for night 6: 7.61e-01
    Error for night 7: 7.68e-01
    Error for night 8: 3.22e+01
    Error for night 9: 1.69e+01
    Error for night 10: 1.21e+00
    Error for night 11: 7.43e-01
    Error for night 12: 2.97e+00
    Error for night 13: 1.04e+00
    Error for night 14: 7.79e-01
    Error for night 15: 9.16e-01
    Error for night 16: 8.22e-01
    Computing face uncertainty 1/16
    Computing face uncertainty 2/16
    Computing face uncertainty 3/16
    Computing face uncertainty 4/16
    Computing face uncertainty 5/16
    Computing face uncertainty 6/16
    Computing face uncertainty 7/16
    Computing face uncertainty 8/16
    Computing face uncertainty 9/16
    Computing face uncertainty 10/16
    Computing face uncertainty 11/16
    Computing face uncertainty 12/16
    Computing face uncertainty 13/16
    Computing face uncertainty 14/16
    Computing face uncertainty 15/16
    Computing face uncertainty 16/16




.. GENERATED FROM PYTHON SOURCE LINES 188-189

Merging the guesses and testing new error

.. GENERATED FROM PYTHON SOURCE LINES 189-208

.. code-block:: default


    merged_obj = mr.merge_shapes(rec_objs, fu_lambdas)

    pl = pv.Plotter()
    mrv.render_spaceobject(pl, merged_obj, opacity=0.7)
    mrv.render_spaceobject(pl, obj, style="wireframe", color="r")
    pl.add_text(
        f"Merged Guess",
        font="courier",
    )
    # mrv.render_spaceobject(pl, rec_objs[0], style="wireframe", color="b")
    pl.show()

    lc_hat = (
        mr.run_light_curve_engine(brdf, merged_obj, sun_body, obs_body)
        * model_scale_factor**2
    )
    err = np.linalg.norm(lc_hat - lc)
    print(f"New Error: {err:.2e}")



.. image-sg:: /gallery/01-light_curve_inversion/images/sphx_glr_convex_inversion_with_uncertainty_002.png
   :alt: convex inversion with uncertainty
   :srcset: /gallery/01-light_curve_inversion/images/sphx_glr_convex_inversion_with_uncertainty_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Merging 0 and 1 of 8
    Merging 1 and 2 of 8
    Merging 2 and 3 of 8
    Merging 3 and 4 of 8
    Merging 4 and 5 of 8
    Merging 5 and 6 of 8
    Merging 6 and 7 of 8
    Merging 7 and 8 of 8
    Merging 0 and 1 of 4
    Merging 1 and 2 of 4
    Merging 2 and 3 of 4
    Merging 3 and 4 of 4
    Merging 0 and 1 of 2
    Merging 1 and 2 of 2
    Merging 0 and 1 of 1
    New Error: 3.35e+00





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 3 minutes  4.106 seconds)


.. _sphx_glr_download_gallery_01-light_curve_inversion_convex_inversion_with_uncertainty.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: convex_inversion_with_uncertainty.py <convex_inversion_with_uncertainty.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: convex_inversion_with_uncertainty.ipynb <convex_inversion_with_uncertainty.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
