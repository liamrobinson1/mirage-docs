
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/01-light_curve_inversion/parametric_box_wing.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_01-light_curve_inversion_parametric_box_wing.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_01-light_curve_inversion_parametric_box_wing.py:


Parametric Box-Wing Inversion
=============================

.. GENERATED FROM PYTHON SOURCE LINES 6-184



.. image-sg:: /gallery/01-light_curve_inversion/images/sphx_glr_parametric_box_wing_001.png
   :alt: parametric box wing
   :srcset: /gallery/01-light_curve_inversion/images/sphx_glr_parametric_box_wing_001.png, /gallery/01-light_curve_inversion/images/sphx_glr_parametric_box_wing_001_2_00x.png 2.00x
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    367973.89241886756
    367973.8924187666
    367973.8924187654
    367973.8924188664
    367973.8924188173
    367973.8924188725
    367973.89241887874
    367973.89241885947
    367973.8924188627
    367956.9939446367
    367956.99394439295
    367956.9939443936
    367956.9939446343
    367956.99394458585
    367956.99394464545
    367956.9939447062
    367956.99394458614
    367956.9939446282
    367737.21912434715
    367737.2191234384
    367737.2191234475
    367737.2191243447
    367737.2191242932
    367737.2191243749
    367737.2191253201
    367737.2191235535
    367737.2191243197
    363811.74351965263
    363811.743515436
    363811.7435154848
    363811.74351965263
    363811.74351958564
    363811.74351965263
    363811.74351965263
    363811.7435087519
    363811.74351951573
    287698.0313644586
    287698.0313477454
    287698.0313479436
    287698.0313644586
    287698.03136438405
    287698.0313644586
    287698.0313644586
    287698.03129597596
    287698.0313640709
    1842141.083886653
    1842141.084023001
    1842141.084021372
    1842141.083886653
    1842141.0838868616
    1842141.083886653
    1842141.083886653
    1842141.0833968464
    1842141.0838876215
    254318.24577617864
    254318.2457636133
    254318.24576376262
    254318.24577617864
    254318.24577612596
    254318.24577617864
    254318.24577617864
    254318.24571479452
    254318.24577581958
    240451.68207847964
    240451.68208229908
    240451.68208225362
    240451.68207847964
    240451.6820784762
    240451.68207847964
    240451.68207847964
    240451.68205275692
    240451.68207829088
    240192.87127238887
    240192.87127275363
    240192.87127274924
    240192.87127238887
    240192.871272376
    240192.87127238887
    240192.87127238887
    240192.87123940853
    240192.8712721628
    240155.10766731642
    240155.10766857016
    240155.10766855523
    240155.10766731642
    240155.107667306
    240155.10766731642
    240155.10766731642
    240155.10763622093
    240155.10766709986
    367481.8617323056
    367481.8617323056
    367481.8617323056
    367481.8617323056
    367481.86173230474
    367481.8617323056
    367481.8617323056
    367481.8617323056
    367481.86173237965
    328931.8036577949
    328931.8036577717
    328931.80365777196
    328931.8036577949
    328931.8036574383
    328931.8036577949
    328931.8036577949
    328931.80366115796
    328931.8036606836
    2723448.6811620966
    2723448.68131443
    2723448.6813126095
    2723448.6811620966
    2723448.681162324
    2723448.6811620966
    2723448.6811620966
    2723448.680098558
    2723448.6811631205
    240154.58478375647
    240154.58478512548
    240154.58478510918
    240154.58478375647
    240154.5847837463
    240154.58478375647
    240154.58478375647
    240154.58475291048
    240154.58478354124
    240153.52865102084
    240153.5286523897
    240153.5286523734
    240153.52865102084
    240153.52865101074
    240153.52865102084
    240153.52865102084
    240153.52862017986
    240153.52865080553
    240149.30581741512
    240149.30581878294
    240149.30581876665
    240149.30581741512
    240149.30581740502
    240149.30581741512
    240149.30581741512
    240149.3057865941
    240149.30581719967
    240132.44162310025
    240132.44162446444
    240132.44162444814
    240132.44162310025
    240132.44162308998
    240132.44162310025
    240132.44162310025
    240132.44159235916
    240132.44162288445
    240065.4179878626
    240065.4179892122
    240065.41798919594
    240065.4179878626
    240065.4179878522
    240065.4179878626
    240065.4179878626
    240065.41795743952
    240065.41798764557
    239804.18483101288
    239804.1848323008
    239804.18483228472
    239804.18483101288
    239804.18483100188
    239804.18483101288
    239804.18483101288
    239804.18480183595
    239804.18483079065
    238864.98673382206
    238864.98673481544
    238864.98673480115
    238864.98673382206
    238864.98673380836
    238864.98673382206
    238864.98673382206
    238864.9867092453
    238864.98673357794
    236727.02741351564
    236727.02741354154
    236727.02741354087
    236727.02741351564
    236727.0274134082
    236727.02741351564
    236727.02741351564
    236727.02739965756
    236727.02741313312
    234381.01849579587
    234381.01849349833
    234381.01849360424
    234381.01849579587
    234381.0184954671
    234381.01849579587
    234381.01849579587
    234381.01849688077
    234381.0184957487
    233596.43792256078
    233596.43792170504
    233596.43792169116
    233596.43792256078
    233596.4379222388
    233596.43792256078
    233596.43792256078
    233596.4379263879
    233596.4379225779
    232372.78972374668
    232372.78972484122
    232372.78972485213
    232372.78972374668
    232372.78972344415
    232372.78972374668
    232372.78972374668
    232372.7897302913
    232372.78972388696
    230297.2504163532
    230297.2504189902
    230297.25041933788
    230297.2504163532
    230297.25041607278
    230297.2504163532
    230297.2504163532
    230297.250424989
    230297.2504167034
    226004.8972026752
    226004.8972019037
    226004.89720119105
    226004.8972026752
    226004.89720238425
    226004.8972026752
    226004.8972026752
    226004.89721636422
    226004.89720344823
    235600.48664372222
    235600.48663724476
    235600.48660804998
    235600.48664372222
    235600.48664334865
    235600.48664372222
    235600.48664372222
    235600.48666805477
    235600.48664566502
    224108.4134055305
    224108.4134025674
    224108.4133979816
    224108.4134055305
    224108.41340521822
    224108.4134055305
    224108.4134055305
    224108.41342293305
    224108.41340658607
    220327.81316352042
    220327.81316057208
    220327.8131552323
    220327.81316352042
    220327.8131632021
    220327.81316352042
    220327.81316352042
    220327.81318282586
    220327.8131648306
    206557.1553341946
    206557.1553305021
    206557.1553184856
    206557.1553341946
    206557.15533384195
    206557.1553341946
    206557.1553341946
    206557.15535977224
    206557.15533627535
    181434.782237928
    181434.7822350408
    181434.78221210247
    181434.782237928
    181434.78223755522
    181434.782237928
    181434.782237928
    181434.7822620093
    181434.782232108
    129893.07883358464
    129893.0788323491
    129893.07881168509
    129893.07883358464
    129893.07883324851
    129893.07883358464
    129893.07883358464
    129893.07884706251
    129893.07882570397
    268259.5424814201
    268259.5424814201
    268259.5424814201
    268259.5424814201
    268259.54248186084
    268259.5424814201
    268259.5424814201
    268259.5424814201
    268259.542466839
    90260.84531310195
    90260.84531288575
    90260.8453016236
    90260.84531310195
    90260.84531296493
    90260.84531310195
    90260.84531310195
    90260.84531598311
    90260.84530453023
    101135.36983944914
    101135.36983944914
    101135.36983944914
    101135.36983944914
    101135.36983958833
    101135.36983944914
    101135.36983944914
    101135.36983944914
    101135.36983282836
    81536.78337377097
    81536.78337371837
    81536.78336313719
    81536.78337377097
    81536.78337381138
    81536.78337377097
    81536.78337377097
    81536.78337442626
    81536.78337124501
    80421.37097691368
    80421.37097590999
    80421.37095956279
    80421.37097691368
    80421.37097671011
    80421.37097691368
    80421.37097691368
    80421.37098873907
    80421.37098667661
    76555.4520416297
    76555.45204114344
    76555.45202604184
    76555.4520416297
    76555.4520415327
    76555.4520416297
    76555.4520416297
    76555.4520474876
    76555.45204544313
    71122.47505955602
    71122.47505926492
    71122.47505604765
    71122.47505955602
    71122.47505947642
    71122.47505955602
    71122.47505955602
    71122.47506429302
    71122.47506015962
    69862.19324353235
    69862.19324337447
    69862.19324174816
    69862.19324353235
    69862.19324349253
    69862.19324353235
    69862.19324353235
    69862.19324671618
    69862.1932430186
    68799.34039771142
    68799.34039759738
    68799.34039662813
    68799.34039771142
    68799.34039768878
    68799.34039771142
    68799.34039771142
    68799.34040035079
    68799.34039802254
    68631.05866934905
    68631.05866929912
    68631.05866890519
    68631.05866934905
    68631.05866933853
    68631.05866934905
    68631.05866934905
    68631.05867126021
    68631.05866941148
    68590.29375236291
    68590.29375235667
    68590.2937523096
    68590.29375236291
    68590.29375235616
    68590.29375236291
    68590.29375236291
    68590.2937538205
    68590.29375240226
    bwp_opt.wing_area=12159.3943486734 bwp_opt.scales=(255.55877505239633, 29.95111235450622, 37.6573192562958) bwp_opt.brdf_box.cd=0.0 bwp_opt.brdf_wing.cd=0.0 bwp_opt.brdf_box.n=66.72865525284259 bwp_opt.brdf_wing.n=123.39099741152117 bwp_opt.brdf_box.cs=1.0 bwp_opt.brdf_wing.cs=1.0






|

.. code-block:: default


    import datetime
    from typing import Any

    import numpy as np
    from scipy.optimize import minimize

    import mirage as mr


    def construct_from_y(attitude, y: np.ndarray):
        cd_wing = np.clip(y[4], 0, 1)
        cd_box = np.clip(y[5], 0, 1)
        y = np.clip(y, 1e-8, np.inf)
        n_box, n_wing = y[6], y[7]
        brdf_box = mr.Brdf(name="phong", cd=cd_box, cs=1 - cd_box, n=n_box)
        brdf_wing = mr.Brdf(name="phong", cd=cd_wing, cs=1 - cd_wing, n=n_wing)
        return BoxWingParametric(
            attitude,
            brdf_box,
            brdf_wing,
            x_scale=y[0],
            y_scale=y[1],
            z_scale=y[2],
            wing_area=y[3],
        )


    class BoxWingParametric:
        def __init__(
            self,
            attitude: mr.AlignedAndConstrainedAttitude,
            brdf_box: mr.Brdf,
            brdf_wing: mr.Brdf,
            x_scale: float = 1.0,
            y_scale: float = 1.0,
            z_scale: float = 1.0,
            wing_area: float = 1.0,
        ):
            self.attitude = attitude
            self.brdf_box = brdf_box
            self.brdf_wing = brdf_wing
            self.scales = (x_scale, y_scale, z_scale)
            cube_template = mr.SpaceObject("cube.obj")
            cube_template.v[:, 0] *= x_scale
            cube_template.v[:, 1] *= y_scale
            cube_template.v[:, 2] *= z_scale

            self.box = mr.SpaceObject(vertices_and_faces=(cube_template.v, cube_template.f))
            self.wing_area = wing_area

        def eval(
            self, dates: np.ndarray[datetime.datetime, Any], ovi: np.ndarray
        ) -> np.ndarray:
            jd = mr.date_to_jd(dates)
            eci_to_body = self.attitude.dcms_at_dates(dates)

            vc_eci = self.attitude.const_interpolator(jd)

            ovb = mr.stack_mat_mult_vec(eci_to_body, ovi)
            vc_body = mr.stack_mat_mult_vec(eci_to_body, vc_eci)

            # pl = pv.Plotter()
            # mrv.plot3(pl, vc_body)
            # mrv.plot3(pl, ovb)
            # pl.show()
            # eneddds

            box_lc = self.box.convex_light_curve(self.brdf_box, svb=vc_body, ovb=ovb)
            wing_lc = (
                self.wing_area
                * self.brdf_wing.eval_normalized_brightness(
                    L=vc_body, O=ovb, N=vc_body
                ).flatten()
            )

            return box_lc, wing_lc

        def optimize(
            self,
            dates: np.ndarray[datetime.datetime, Any],
            ovi: np.ndarray,
            lc_unit_observed: np.ndarray,
        ):
            valid_inds = ~lc_unit_observed.mask

            def objective(y: np.ndarray) -> float:
                bwpi = construct_from_y(self.attitude, y)
                box_lc, wing_lc = bwpi.eval(dates, ovi)
                err = np.linalg.norm(
                    lc_unit_observed[valid_inds] - (box_lc + wing_lc)[valid_inds]
                )
                print(err)
                return err

            opt_sol = minimize(objective, 0.5 * np.ones(8), options={"maxiter": 20})
            return construct_from_y(self.attitude, opt_sol.x)


    date_start = mr.utc(2023, 5, 20, 20, 45, 0)
    (dates, epsecs) = mr.date_linspace(
        date_start - mr.days(3), date_start, 1e3, return_epsecs=True
    )

    station = mr.Station()

    station.constraints = [
        mr.SnrConstraint(3),
        mr.ElevationConstraint(10),
        mr.TargetIlluminatedConstraint(),
        mr.ObserverEclipseConstraint(station),
        mr.VisualMagnitudeConstraint(20),
        mr.MoonExclusionConstraint(10),
        mr.HorizonMaskConstraint(station),
    ]

    obj = mr.SpaceObject("matlib_hylas4.obj", identifier="superbird 6")
    # obj = mr.SpaceObject("matlib_tess.obj", identifier="NAVSTAR 62 (USA 201)")
    r_obj_j2k = obj.propagate(dates)

    sv = mr.sun(dates)
    nadir = -mr.hat(r_obj_j2k)
    attitude = mr.AlignedAndConstrainedAttitude(
        v_align=nadir,
        v_const=sv,
        dates=dates,
        axis_order=(1, 2, 0),
    )
    brdf = mr.Brdf("phong")

    (lc_ccd_signal, aux_data) = station.observe_light_curve(
        obj,
        attitude,
        brdf,
        dates,
        model_scale_factor=1,
        use_engine=True,
        show_window=True,
        frame_rate=1000,
        instances=1,
        rotate_panels=True,
    )

    brdf_bwp = mr.Brdf("phong", cd=0.5, cs=0.5, n=10)
    bwp = BoxWingParametric(attitude, brdf_bwp, brdf_bwp)

    lc_noisy_adu = lc_ccd_signal()

    lc_noisy_irrad = lc_noisy_adu / aux_data["sint"]
    lc_noisy_unit_irrad = lc_noisy_irrad * (aux_data["rmag_station_to_sat"] * 1e3) ** 2
    invalid_inds = np.isnan(lc_noisy_unit_irrad)

    ovi = mr.hat(aux_data["station_pos_eci"] - aux_data["object_pos_eci"])
    ovb = mr.stack_mat_mult_vec(attitude.dcms_at_dates(dates), ovi)

    bwp_opt = bwp.optimize(dates, ovi, lc_noisy_unit_irrad)
    box_lc_opt, wing_lc_opt = bwp_opt.eval(dates, ovi)

    print(
        f"{bwp_opt.wing_area=}",
        f"{bwp_opt.scales=}",
        f"{bwp_opt.brdf_box.cd=}",
        f"{bwp_opt.brdf_wing.cd=}",
        f"{bwp_opt.brdf_box.n=}",
        f"{bwp_opt.brdf_wing.n=}",
        f"{bwp_opt.brdf_box.cs=}",
        f"{bwp_opt.brdf_wing.cs=}",
    )

    import matplotlib.pyplot as plt

    plt.plot(dates, lc_noisy_unit_irrad)
    plt.plot(dates, aux_data["lc_clean_norm"])
    plt.plot(dates, wing_lc_opt + box_lc_opt)
    # plt.plot(dates, box_lc_opt)
    # plt.plot(dates, wing_lc_opt)
    plt.legend(["noisy_true", "clean_true", "recon"])
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  12.245 seconds)


.. _sphx_glr_download_gallery_01-light_curve_inversion_parametric_box_wing.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: parametric_box_wing.py <parametric_box_wing.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: parametric_box_wing.ipynb <parametric_box_wing.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
