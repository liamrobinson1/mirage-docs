
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/07-observer/render_ccd.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_07-observer_render_ccd.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_07-observer_render_ccd.py:


CCD Rendering
=============

Renders a synthetic CCD image of an observation taken by the POGS telescope

.. GENERATED FROM PYTHON SOURCE LINES 7-51



.. image-sg:: /gallery/07-observer/images/sphx_glr_render_ccd_001.png
   :alt: CCD Image of 26853 at 2023-01-01 07:00:00 UTC
   :srcset: /gallery/07-observer/images/sphx_glr_render_ccd_001.png, /gallery/07-observer/images/sphx_glr_render_ccd_001_2_00x.png 2.00x
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    WARNING: no observation constraints assigned!






|

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    import mirage as mr
    import mirage.vis as mrv

    station = mr.Station("pogs")
    station.telescope.fwhm = 4

    date = mr.utc(2023, 1, 1, 7)
    deltat = mr.seconds(10)
    dates = np.array([date, date + deltat])

    obj = mr.SpaceObject("matlib_hylas4.obj", identifier=26853)
    r_obj_eci = obj.propagate(dates)

    sv = mr.sun(dates)
    nadir = -mr.hat(r_obj_eci)
    attitude = mr.AlignedAndConstrainedAttitude(
        v_align=nadir,
        v_const=sv,
        dates=dates,
        axis_order=(1, 2, 0),
    )
    obj_lc_sampler, _ = station.observe_light_curve(
        obj,
        attitude,
        mr.Brdf("phong"),
        dates,
        use_engine=True,
        instance_count=1,
        model_scale_factor=10,
        rotate_panels=True,
    )
    lc_adu = obj_lc_sampler()

    adu_grid_streaked_sampled = station.telescope.ccd.generate_ccd_image(dates, station, r_obj_eci, lc_adu)
    plt.imshow(np.log10(adu_grid_streaked_sampled), cmap="gray")
    mrv.texit(
        f'CCD Image of {obj.satnum} at {dates[0].strftime("%Y-%m-%d %H:%M:%S")} UTC', "", ""
    )
    plt.grid(False)
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  8.900 seconds)


.. _sphx_glr_download_gallery_07-observer_render_ccd.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: render_ccd.py <render_ccd.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: render_ccd.ipynb <render_ccd.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
