
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/07-summer-2023/tycho_visualization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_07-summer-2023_tycho_visualization.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_07-summer-2023_tycho_visualization.py:


Tycho 2 Catalog
===============

Visualizing the Tycho 2 star catalog efficiently

.. GENERATED FROM PYTHON SOURCE LINES 7-60


.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "/Users/liamrobinson/Documents/PyLightCurves/examples/07-summer-2023/tycho_visualization.py", line 46, in <module>
        enddd
    NameError: name 'enddd' is not defined






|

.. code-block:: default

    import os
    import sys
    import pyvista as pv
    import numpy as np

    sys.path.append("./src")
    import pyspaceaware as ps

    from scipy.io import loadmat

    ps.tic()
    mat = loadmat(
        os.path.join(os.environ["DATADIR"], "Tycho_2_fullcatalog.mat")
    )
    ps.toc()

    uvs = mat["Tycho2_full"][0][0][0].T
    ra = mat["Tycho2_full"][0][0][1].T
    dec = mat["Tycho2_full"][0][0][2].T
    vm = mat["Tycho2_full"][0][0][-1].T.flatten()

    pl = pv.Plotter()
    ps.plot_earth(pl)
    # ps.scatter3(pl, uvs, scalars=vm.flatten())
    irrad = ps.apparent_magnitude_to_irradiance(vm)
    irrad /= np.max(irrad)

    use_inds = (
        ~np.isnan(ra.flatten())
        & ~np.isnan(dec.flatten())
        & ~np.isnan(vm.flatten())
    )
    save_dict = {
        "j2000_ra": ps.wrap_to_pi(np.deg2rad(ra).flatten()[use_inds]),
        "j2000_dec": np.deg2rad(dec).flatten()[use_inds],
        "visual_magnitude": vm.flatten()[use_inds],
    }

    ps.save_json_data(save_dict, "tycho2.json", 8)
    enddd

    add_stars = irrad > 0.01
    ps.tic()
    actor = pl.add_points(
        ps.AstroConstants.earth_r_eq * uvs[add_stars, :],
        render_points_as_spheres=True,
        color="y",
        opacity=vm[add_stars],
        point_size=1,
    )
    ps.toc()

    pl.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  49.245 seconds)


.. _sphx_glr_download_gallery_07-summer-2023_tycho_visualization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tycho_visualization.py <tycho_visualization.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tycho_visualization.ipynb <tycho_visualization.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
