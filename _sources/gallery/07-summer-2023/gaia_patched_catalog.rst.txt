
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/07-summer-2023/gaia_patched_catalog.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_07-summer-2023_gaia_patched_catalog.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_07-summer-2023_gaia_patched_catalog.py:


GAIA Patched Catalog
====================

Displays the patched GAIA catalog

.. GENERATED FROM PYTHON SOURCE LINES 9-10

Let's set up a grid of directions to plot the starlight signal at in J2000

.. GENERATED FROM PYTHON SOURCE LINES 10-22

.. code-block:: default

    import pyspaceaware as ps
    import matplotlib.pyplot as plt
    import numpy as np

    dec_grid, ra_grid = np.meshgrid(
        np.linspace(-np.pi / 2, np.pi / 2, 180),
        np.linspace(-np.pi, np.pi, 360),
        indexing="ij",
    )
    x, y, z = ps.sph_to_cart(ra_grid.flatten(), dec_grid.flatten())
    sample_dirs_eci = np.vstack((x, y, z)).T








.. GENERATED FROM PYTHON SOURCE LINES 23-24

Now we define the telescope we want to perform the observations with, we'll use the Purdue Optical Ground Station (POGS)

.. GENERATED FROM PYTHON SOURCE LINES 24-33

.. code-block:: default

    ts = ps.Telescope(preset="pogs")
    sig = ps.integrated_starlight_signal(
        look_dirs_eci_eq=sample_dirs_eci,
        obs_pos_eci_eq=sample_dirs_eci,
        t_int=ts.integration_time,
        scale=ts.pixel_scale,
        d=ts.aperture_diameter,
    )








.. GENERATED FROM PYTHON SOURCE LINES 34-35

Now we reshape the signal into the original grid and display the plot as an image

.. GENERATED FROM PYTHON SOURCE LINES 35-46

.. code-block:: default

    plt.imshow(
        np.flipud(sig.reshape(dec_grid.shape)),
        cmap="hot",
        extent=(-180, 180, -90, 90),
    )
    plt.colorbar(label="Total signal [e-/pix]")
    plt.title("Patched GAIA Catalog Above Magnitude 16")
    plt.xlabel("Inertial Right Ascension [deg]")
    plt.xlabel("Inertial Declination [deg]")
    plt.show()




.. image-sg:: /gallery/07-summer-2023/images/sphx_glr_gaia_patched_catalog_001.png
   :alt: Patched GAIA Catalog Above Magnitude 16
   :srcset: /gallery/07-summer-2023/images/sphx_glr_gaia_patched_catalog_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 47-48

We can also display this on the ECI unit sphere:

.. GENERATED FROM PYTHON SOURCE LINES 48-63

.. code-block:: default

    import pyvista as pv

    pl = pv.Plotter()
    pl.set_background("black")
    ps.scatter3(
        pl,
        sample_dirs_eci,
        scalars=sig,
        point_size=10,
        cmap="hot",
        opacity=sig / np.max(sig),
    )
    ps.plot_basis(pl, np.eye(3), ["x", "y", "z"], scale=1.3, color="cyan")
    pl.view_isometric()
    pl.show()



.. image-sg:: /gallery/07-summer-2023/images/sphx_glr_gaia_patched_catalog_002.png
   :alt: gaia patched catalog
   :srcset: /gallery/07-summer-2023/images/sphx_glr_gaia_patched_catalog_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.954 seconds)


.. _sphx_glr_download_gallery_07-summer-2023_gaia_patched_catalog.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: gaia_patched_catalog.py <gaia_patched_catalog.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: gaia_patched_catalog.ipynb <gaia_patched_catalog.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
