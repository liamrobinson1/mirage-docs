
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/04-environment/atmospheric_absorption.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_04-environment_atmospheric_absorption.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_04-environment_atmospheric_absorption.py:


Atmospheric Transmission
========================
Using Sun spectra to determine the atmospheric transmission spectrum

.. GENERATED FROM PYTHON SOURCE LINES 6-38

.. code-block:: default


    import os

    import matplotlib.pyplot as plt
    import numpy as np

    import mirage as mr
    import mirage.vis as mrv

    sun_spectra = np.loadtxt(
        os.path.join(os.environ["DATADIR"], "ASTMG173.csv"), skiprows=2, delimiter=","
    )
    lambdas_nm = sun_spectra[:, 0]
    sun_vacuum_w_m3 = sun_spectra[:, 1] * 1e9
    sun_global_w_m3 = sun_spectra[:, 2] * 1e9
    sun_direct_w_m3 = sun_spectra[:, 3] * 1e9
    ss_proof = mr.sun_spectrum(lambdas_nm * 1e-9)

    i0 = np.trapz(sun_vacuum_w_m3, lambdas_nm * 1e-9)
    print(i0)
    plt.plot(lambdas_nm, sun_vacuum_w_m3)
    plt.plot(lambdas_nm, sun_global_w_m3)
    plt.plot(lambdas_nm, sun_direct_w_m3)
    plt.plot(lambdas_nm, ss_proof)
    mrv.texit(
        "Sun Irradiance Spectra",
        "Wavelength [nm]",
        r"$\left[ \frac{W}{m^2 \cdot m} \right]$",
        ["AM0", "AM1.5 Global", "AM1.5 Direct", "PROOF zero airmass"],
    )
    plt.show()




.. image-sg:: /gallery/04-environment/images/sphx_glr_atmospheric_absorption_001.png
   :alt: Sun Irradiance Spectra
   :srcset: /gallery/04-environment/images/sphx_glr_atmospheric_absorption_001.png, /gallery/04-environment/images/sphx_glr_atmospheric_absorption_001_2_00x.png 2.00x
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    1347.93432




.. GENERATED FROM PYTHON SOURCE LINES 39-40

We can divide the direct spectrum by the vacuum spectrum to get the fraction of light at that wavelength transmitted by the atmosphere. Note that since the AM1.5 Direct spectrum is for a relative airmass of 1.5, we have to adjust for the optical path length difference

.. GENERATED FROM PYTHON SOURCE LINES 40-47

.. code-block:: default


    y = mr.atmospheric_transmission_spectrum(lambdas_nm * 1e-9)
    plt.plot(lambdas_nm, y)
    mrv.plot_visible_band(lambdas_nm * 1e-9, y)
    mrv.texit("Atmospheric Absorption Spectrum", "Wavelength [nm]", "Fraction absorbed")
    plt.show()




.. image-sg:: /gallery/04-environment/images/sphx_glr_atmospheric_absorption_002.png
   :alt: Atmospheric Absorption Spectrum
   :srcset: /gallery/04-environment/images/sphx_glr_atmospheric_absorption_002.png, /gallery/04-environment/images/sphx_glr_atmospheric_absorption_002_2_00x.png 2.00x
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 48-49

Let's define a function that can do all of this stuff for us


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.166 seconds)


.. _sphx_glr_download_gallery_04-environment_atmospheric_absorption.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: atmospheric_absorption.py <atmospheric_absorption.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: atmospheric_absorption.ipynb <atmospheric_absorption.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
