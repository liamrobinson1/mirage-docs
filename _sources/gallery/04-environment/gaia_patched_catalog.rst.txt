
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/04-environment/gaia_patched_catalog.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_04-environment_gaia_patched_catalog.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_04-environment_gaia_patched_catalog.py:


GAIA Patched Catalog
====================

Displays the patched GAIA catalog

.. GENERATED FROM PYTHON SOURCE LINES 7-11

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np








.. GENERATED FROM PYTHON SOURCE LINES 12-13

Let's set up a grid of directions to plot the starlight signal at in J2000

.. GENERATED FROM PYTHON SOURCE LINES 13-22

.. code-block:: default

    import mirage as mr
    import mirage.vis as mrv

    dec_grid, ra_grid = np.meshgrid(
        np.linspace(-np.pi / 2, np.pi / 2, 180),
        np.linspace(-np.pi, np.pi, 360),
        indexing="ij",
    )








.. GENERATED FROM PYTHON SOURCE LINES 23-24

Conversion from :math:`S_{10}` to irradiance

.. GENERATED FROM PYTHON SOURCE LINES 24-34

.. code-block:: default


    solid_angle_sterad = np.deg2rad(1) ** 2
    lambdas = np.linspace(1e-8, 1e-6, int(1e2))
    strint = mr.proof_zero_mag_stellar_spectrum(lambdas)  # Approximately same as STRINT
    s10_to_irrad = (
        10**-4 * solid_angle_sterad * np.rad2deg(1) ** 2 * np.trapz(strint, lambdas)
    )
    m_s10 = mr.irradiance_to_apparent_magnitude(s10_to_irrad)
    s10_to_irrad_true = np.rad2deg(1) ** 2 * mr.apparent_magnitude_to_irradiance(10)








.. GENERATED FROM PYTHON SOURCE LINES 35-36

Let's first display the raw :math:`S_{10}` brightness of the patched catalog

.. GENERATED FROM PYTHON SOURCE LINES 36-58

.. code-block:: default


    f_star = mr.catalog_starlight_signal(
        ra_grid, dec_grid
    )  # Units [10th magnitude stars / deg^2] = S_10

    plt.imshow(
        np.flipud(f_star),
        cmap="hot",
        extent=(-180, 180, -90, 90),
    )

    mrv.texit(
        "Patched GAIA Catalog $m \geq 16$",
        "Right Ascension [deg]",
        "Declination [deg]",
        grid=False,
    )
    plt.colorbar(
        label="Surface brightness $\\left[ S_{10} \\right]$", cax=mrv.get_cbar_ax()
    )
    plt.show()




.. image-sg:: /gallery/04-environment/images/sphx_glr_gaia_patched_catalog_001.png
   :alt: Patched GAIA Catalog $m \geq 16$
   :srcset: /gallery/04-environment/images/sphx_glr_gaia_patched_catalog_001.png, /gallery/04-environment/images/sphx_glr_gaia_patched_catalog_001_2_00x.png 2.00x
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 59-60

Now we define the telescope we want to perform the observations with, we'll use the Purdue Optical Ground Station (POGS)

.. GENERATED FROM PYTHON SOURCE LINES 60-70

.. code-block:: default

    x, y, z = mr.sph_to_cart(ra_grid.flatten(), dec_grid.flatten())
    sample_dirs_eci = np.vstack((x, y, z)).T

    station = mr.Station("pogs")
    sig = mr.integrated_starlight_signal(
        station=station,
        look_dirs_eci_eq=sample_dirs_eci,
        obs_pos_eci_eq=sample_dirs_eci,
    )








.. GENERATED FROM PYTHON SOURCE LINES 71-73

Now we reshape the signal into the original grid and display the plot as an image
We'll also overlay the Tycho 2 RA/Dec coordinates to confirm that both overlap correctly

.. GENERATED FROM PYTHON SOURCE LINES 73-104

.. code-block:: default


    plt.imshow(
        np.flipud(sig.reshape(dec_grid.shape)),
        cmap="hot",
        extent=(-180, 180, -90, 90),
    )
    import os

    urls_and_dirs = {
        "https://github.com/liamrobinson1/pyspaceaware-resources/raw/main/tycho2.json": os.environ[
            "DATADIR"
        ],
    }

    for url, dir in urls_and_dirs.items():
        mr.save_file_from_url(url, dir)

    t2 = mr.load_json_data("tycho2.json")
    tycho2_ra_rad = t2["j2000_ra"][::10]
    tycho2_dec_rad = t2["j2000_dec"][::10]
    vm = t2["visual_magnitude"][::10]

    mrv.texit(
        "Patched GAIA Catalog $m \geq 16$",
        "Right Ascension [deg]",
        "Declination [deg]",
        grid=False,
    )
    plt.colorbar(label="Total signal [e-/pix]", cax=mrv.get_cbar_ax())
    plt.show()




.. image-sg:: /gallery/04-environment/images/sphx_glr_gaia_patched_catalog_002.png
   :alt: Patched GAIA Catalog $m \geq 16$
   :srcset: /gallery/04-environment/images/sphx_glr_gaia_patched_catalog_002.png, /gallery/04-environment/images/sphx_glr_gaia_patched_catalog_002_2_00x.png 2.00x
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    tycho2.json: 0.00B [00:00, ?B/s]    tycho2.json:   0%|          | 8.19k/83.8M [00:00<33:28, 41.7kB/s]    tycho2.json:   5%|4         | 3.99M/83.8M [00:00<00:04, 16.7MB/s]    tycho2.json:  14%|#3        | 11.4M/83.8M [00:00<00:01, 38.3MB/s]    tycho2.json:  16%|#5        | 13.4M/83.8M [00:00<00:02, 29.2MB/s]    tycho2.json:  25%|##5       | 21.2M/83.8M [00:00<00:01, 44.5MB/s]    tycho2.json:  35%|###4      | 29.2M/83.8M [00:00<00:00, 55.5MB/s]    tycho2.json:  44%|####3     | 36.5M/83.8M [00:00<00:00, 60.8MB/s]    tycho2.json:  52%|#####2    | 43.6M/83.8M [00:00<00:00, 63.9MB/s]    tycho2.json:  56%|#####5    | 46.7M/83.8M [00:01<00:00, 50.4MB/s]    tycho2.json:  65%|######4   | 54.4M/83.8M [00:01<00:00, 57.0MB/s]    tycho2.json:  75%|#######4  | 62.6M/83.8M [00:01<00:00, 64.0MB/s]    tycho2.json:  84%|########4 | 70.4M/83.8M [00:01<00:00, 68.2MB/s]    tycho2.json:  92%|#########1| 77.0M/83.8M [00:01<00:00, 67.6MB/s]    tycho2.json:  95%|#########4| 79.5M/83.8M [00:01<00:00, 51.7MB/s]    tycho2.json: 83.8MB [00:01, 50.6MB/s]                            




.. GENERATED FROM PYTHON SOURCE LINES 105-106

We can also display the GAIA patched catalog and the Tycho 2 unit vectors on the ECI unit sphere:

.. GENERATED FROM PYTHON SOURCE LINES 106-130

.. code-block:: default

    import pyvista as pv

    tycho2_unit_vectors = np.vstack(mr.sph_to_cart(az=tycho2_ra_rad, el=tycho2_dec_rad)).T

    pl = pv.Plotter()
    pl.set_background("black")
    mrv.scatter3(
        pl,
        sample_dirs_eci,
        scalars=sig,
        point_size=10,
        cmap="fire",
        opacity=sig / np.max(sig),
    )
    mrv.scatter3(
        pl,
        tycho2_unit_vectors,
        scalars=1 - vm / np.max(vm),
        point_size=0.05,
        cmap="cool",
    )
    mrv.plot_basis(pl, np.eye(3), ["x", "y", "z"], scale=1.3, color="cyan")
    pl.view_isometric()
    pl.show()



.. image-sg:: /gallery/04-environment/images/sphx_glr_gaia_patched_catalog_003.png
   :alt: gaia patched catalog
   :srcset: /gallery/04-environment/images/sphx_glr_gaia_patched_catalog_003.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  4.904 seconds)


.. _sphx_glr_download_gallery_04-environment_gaia_patched_catalog.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: gaia_patched_catalog.py <gaia_patched_catalog.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: gaia_patched_catalog.ipynb <gaia_patched_catalog.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
