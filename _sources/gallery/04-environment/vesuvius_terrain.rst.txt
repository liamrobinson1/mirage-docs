
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/04-environment/vesuvius_terrain.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_04-environment_vesuvius_terrain.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_04-environment_vesuvius_terrain.py:


Terrain Tiles
=============

.. GENERATED FROM PYTHON SOURCE LINES 5-48



.. image-sg:: /gallery/04-environment/images/sphx_glr_vesuvius_terrain_001.png
   :alt: vesuvius terrain
   :srcset: /gallery/04-environment/images/sphx_glr_vesuvius_terrain_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Downloading tiles for N40E014.hgt






|

.. code-block:: default

    import sys

    sys.path.append(".")

    import pyspaceaware as ps
    import numpy as np
    import pyvista as pv
    import terrainman as tm

    lat_deg, lon_deg = 40.8224, 14.4289
    lat_rad, lon_rad = np.deg2rad(lat_deg), np.deg2rad(lon_deg)

    tile = tm.TerrainDataHandler().load_tiles_containing(lat_deg, lon_deg)

    elev_grid = tile.elev_grid / 1e3 + ps.geoid_height_at_lla(lat_rad, lon_rad)
    itrf_terrain = ps.lla_to_itrf(
        np.deg2rad(tile.lat_grid).flatten(),
        np.deg2rad(tile.lon_grid).flatten(),
        elev_grid.T.flatten(),
    )

    dem = pv.StructuredGrid(
        itrf_terrain[:, 0].reshape(elev_grid.shape),
        itrf_terrain[:, 1].reshape(elev_grid.shape),
        itrf_terrain[:, 2].reshape(elev_grid.shape),
    )
    dem["Elevation [km]"] = elev_grid.T.flatten(order="f")
    dem["Latitude"] = tile.lat_grid.flatten(order="f")
    dem["Longitude"] = tile.lon_grid.flatten(order="f")

    pl = pv.Plotter()
    pl.add_mesh(
        dem,
        smooth_shading=True,
        scalars="Elevation [km]",
        opacity=0.9,
        show_scalar_bar=True,
    )
    ps.plot_earth(pl, mode="ecef", date=ps.now(), high_def=True, ocean_floor=False)
    pl.camera.focal_point = np.mean(itrf_terrain, axis=0)
    pl.camera.position = 6800 * ps.hat(np.mean(itrf_terrain, axis=0))

    pl.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  19.994 seconds)


.. _sphx_glr_download_gallery_04-environment_vesuvius_terrain.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: vesuvius_terrain.py <vesuvius_terrain.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: vesuvius_terrain.ipynb <vesuvius_terrain.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
