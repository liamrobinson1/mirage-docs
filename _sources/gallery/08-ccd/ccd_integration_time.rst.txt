
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/08-ccd/ccd_integration_time.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_08-ccd_ccd_integration_time.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_08-ccd_ccd_integration_time.py:


Integration Time
================
Comparing the effects of different integration times on the shape and level of the background

.. GENERATED FROM PYTHON SOURCE LINES 6-13

.. code-block:: Python


    import os

    import matplotlib.pyplot as plt
    import numpy as np
    import pyvista as pv
    import seaborn as sns







.. GENERATED FROM PYTHON SOURCE LINES 14-15

Loading a fits image from the Purdue Optical Ground Station

.. GENERATED FROM PYTHON SOURCE LINES 15-20

.. code-block:: Python

    from astropy.io import fits

    import mirage as mr
    import mirage.vis as mrv








.. GENERATED FROM PYTHON SOURCE LINES 21-22

Defining functions that compute the background of a CCD image

.. GENERATED FROM PYTHON SOURCE LINES 25-26

Loading the CCD image

.. GENERATED FROM PYTHON SOURCE LINES 26-38

.. code-block:: Python

    ccd_dir = os.path.join(os.environ["SRCDIR"], "..", "data")
    fit_files = ["00147020.fit", "00130398.fit"]

    ccd_paths = [os.path.join(ccd_dir, f) for f in fit_files]

    integration_time_seconds = np.zeros(2)
    ccd_images = []
    for i, ccd_path in enumerate(ccd_paths):
        with fits.open(ccd_path) as hdul:
            ccd_images.append(hdul[0].data)
            integration_time_seconds[i] = hdul[0].header["EXPTIME"]








.. GENERATED FROM PYTHON SOURCE LINES 39-40

Plotting the two CCD images side by side

.. GENERATED FROM PYTHON SOURCE LINES 40-50

.. code-block:: Python

    plt.figure(figsize=(10, 5))
    for i in range(len(ccd_images)):
        plt.subplot(1, 2, i + 1)
        plt.imshow(np.log10(ccd_images[i]), cmap="gist_stern")
        mrv.texit(f"Integration Time: {integration_time_seconds[i]} s", "", "", grid=False)
        plt.colorbar(cax=mrv.get_cbar_ax(), label="$\log_{10}{ADU}$")
        plt.clim(3, 3.5)
    plt.tight_layout()
    plt.show()




.. image-sg:: /gallery/08-ccd/images/sphx_glr_ccd_integration_time_001.png
   :alt: Integration Time: 4.0 s, Integration Time: 10.0 s
   :srcset: /gallery/08-ccd/images/sphx_glr_ccd_integration_time_001.png, /gallery/08-ccd/images/sphx_glr_ccd_integration_time_001_2_00x.png 2.00x
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 51-52

Printing the background level of both images

.. GENERATED FROM PYTHON SOURCE LINES 52-56

.. code-block:: Python

    for ccd_adu, int_time in zip(ccd_images, integration_time_seconds):
        ccd_adu_minus_br = mr.ChargeCoupledDevice().subtract_parabola(ccd_adu)
        _, background_mean = mr.image_background_naive(ccd_adu_minus_br)
        print(f"Integration time: {int_time} s: {background_mean} ADU")




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Integration time: 4.0 s: 105.0420606615142 ADU
    Integration time: 10.0 s: 110.6348909302432 ADU





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 9.752 seconds)


.. _sphx_glr_download_gallery_08-ccd_ccd_integration_time.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: ccd_integration_time.ipynb <ccd_integration_time.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: ccd_integration_time.py <ccd_integration_time.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
